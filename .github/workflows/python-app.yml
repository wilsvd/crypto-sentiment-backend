name: Python application #name of our applications, name doesn't matter

on: #our triggers, push and pull request, it only performs on the main branch.
    push:
        branches: ["main", "develop"]
    pull_request:
        branches: ["main", "develop"]

permissions:
    contents: read

jobs: #jobs are essentially our build tasks
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.10
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8 pytest
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Install and configure Poetry #We're using poetry for dependency management
              uses: snok/install-poetry@v1 #We're also caching to avoid fresh install everytime
              with:
                  version: 1.1.13
                  virtualenvs-create: true
                  virtualenvs-in-project: true
            - name: Set up cache
              uses: actions/cache@v2
              id: cached-poetry-dependencies
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              working-directory: ./src #We're matching our project structure
              run: poetry install
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 ./src --count --select=E9,F63,F7 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            # - name: Test with pytest
            #   working-directory: ./src/src #We're changing working directory to match our project structure
            #   run: |
            #       poetry run python -m pytest
