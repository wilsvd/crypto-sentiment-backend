from post_collector import SentimentCollector
from coin_collector import CoinCollector

import time

SUBREDDITS = [
    # "bitcoin",
    # "ethereum",
    # "bnbchainofficial",
    # "ripple",
    # "cardano",
    # "0xPolygon",
    # "dogecoin",
    # "solana",
    # "dot",
    # "SHIBArmy",
    # "litecoin",
    # "Tronix",
    # "Avax",
    # "Uniswap",
    # "cosmosnetwork",
    # "chainlink",
    # "bitfinex",
    # "EthereumClassic",
    # "monero",
    # "Bitcoincash",
    # "okx",
    # "stellar",
    # "hedera",
    # "lidofinance",
    "Crypto_com",
    # "AlgorandOfficial",
    # "vechain",
    # "QuantNetwork",
    # "dfinity",
    # "thegraph",
    # "decentraland",
    # "FantomFoundation",
    # "EOS",
    # "Aave_Official",
    # "theta_network",
    # "AxieInfinity",
    # "tezos",
    # "terraluna",
    # "HuobiGlobal",
    # "kucoin",
    # "ImmutableX/",
    # "zec",
    # "pancakeswap/",
    # "MakerDAO",
    # "CurveDAO",
    # "MinaProtocol",
    # "BittorrentToken",
    # "ecash",
    # "dashpay",
    # "Iota",
    # "NEO",
    # "synthetix_io",
    # "Gemini",
    # "klaytn",
    # "trustwallet",
    # "thorchain",
    # "rocketpool",
    # "SingularityNet",
    # "loopringorg",
    # "EnjinCoin",
    # "zilliqa",
    # "1inch",
    # "nexo",
    # "CasperCSPR",
    # "BATProject",
    # "dydxprotocol",
    # "stacks",
    # "terraluna",
    # "xinfin",
    # "WOO_X",
    # "holochain",
    # "decred",
    # "Ravencoin",
    # "CeloHQ",
    # "oasisnetwork/",
    # "Arweave",
    # "FetchAI_Community",
    # "kava_platform/",
    # "HeliumNetwork",
    # "thresholdnetwork",
    # "theta_network",
    # "harmony_one/",
    # "GoGalaGames/",
    # "Qtum",
    # "BitcoinGoldHQ",
    # "gnosisPM",
    # "Ankrofficial/",
    # "SushiSwap",
    # "SSVnetwork/",
    # "IoTex",
    # "oceanprotocol",
    # "Wavesplatform",
    # "chia",
    # "StepN",
    # "moonbeam",
    # "SHIBArmy",
    # "GolemProject",
    # "livepeer",
    # "MaskNetwork",
    # "kadena/",
]

if __name__ == "__main__":
    data = SentimentCollector()
    coins = CoinCollector()

    start = time.time()
    # subreddits = coins.get_coin_subreddits()
    overall_sentiment = data.find_crypto_sentiments(SUBREDDITS)
    end = time.time()
    print(f"Time taken: {end - start}")
